annotation <- NULL
# Iterate through databases
for (db in c("ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME",
"GENENAME", "SYMBOL", "UCSCKG", "UNIPROT")) {
annotation <- bitr(gene, fromType = db, toType = "ENTREZ", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
}
annotated_genes[[gene]] <- annotation
}
for (gene in original_gene_list) {
# Initialize annotation variable
annotation <- NULL
# Iterate through databases
for (db in c("ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME",
"GENENAME", "SYMBOL", "UCSCKG", "UNIPROT")) {
annotation <- bitr(gene, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
}
annotated_genes[[gene]] <- annotation
}
library(org.Hs.eg.db)  # Assuming you're working with the Homo sapiens database
databases = c("ACCNUM", "ALIAS", "ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME", "EVIDENCE", "EVIDENCEALL", "GENENAME", "GENETYPE", "GO", "GOALL", "IPI", "MAP", "OMIM", "ONTOLOGY", "ONTOLOGYALL", "PATH", "PFAM", "PMID", "PROSITE", "REFSEQ", "SYMBOL", "UCSCKG", "UNIPROT")
original_gene_list <- c("ADGRG7", "AMTN", "ATRNL1", "C1QTNF1")
annotated_genes <- vector("list", length(original_gene_list))
for (gene in original_gene_list) {
# Initialize annotation variable
annotation <- NULL
# Iterate through databases
for (db in databases) {
annotation <- bitr(gene, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
}
annotated_genes[[gene]] <- annotation
}
annotation <- NULL
# Iterate through databases
for (db in databases) {
annotation <- bitr(names(original_gene_list), fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
annotated_genes[[gene]] <- annotation
}
annotation
print("here")
is.null(annotation)
dim(annotation)
dim(annotation)[0]
dim(annotation)[0]==0
dim(annotation)[0]!=0
integer(dim(annotation)[0])==0
dim(annotation)[0]==0
nrow(annotation) != 0
annotation <- NULL
# Iterate through databases
for (db in databases) {
annotation <- bitr(names(original_gene_list), fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
annotated_genes[[gene]] <- annotation
}
# Iterate through databases
for (db in databases) {
annotation <- bitr(names(original_gene_list), fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}
library(org.Hs.eg.db)  # Assuming you're working with the Homo sapiens database
databases = c("ACCNUM", "ALIAS", "ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME", "EVIDENCE", "EVIDENCEALL", "GENENAME", "GENETYPE", "GO", "GOALL", "IPI", "MAP", "OMIM", "ONTOLOGY", "ONTOLOGYALL", "PATH", "PFAM", "PMID", "PROSITE", "REFSEQ", "SYMBOL", "UCSCKG", "UNIPROT")
original_gene_list <- c("ADGRG7", "AMTN", "ATRNL1", "C1QTNF1")
annotated_genes <- vector("list", length(original_gene_list))
# Iterate through databases
for (db in databases) {
annotation <- bitr(names(original_gene_list), fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}
annotation
names(original_gene_list)
for (db in databases) {
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}
bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
bitr(original_gene_list, fromType = "", toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Iterate through databases
for (db in databases) {
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}
for (db in databases) {
tryCatch({
annotation <- bitr(gene, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}, error = function(e) {
cat("An error occurred:", conditionMessage(e), "\n")
})
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
}
for (db in databases) {
tryCatch({
annotation <- bitr(gene, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}, error = function(e) {
cat("An error occurred:", conditionMessage(e), "\n")
next  # Continue to the next iteration
})
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
}
for (db in databases) {
tryCatch({
annotation <- bitr(gene, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}, error = function(e) {
next  # Continue to the next iteration
})
if (!is.null(annotation)) {
break  # Stop iterating if annotation is found
}
}
original_gene_list <- c("ADGRG7","AMTN","ATRNL1","C1QTNF1")
ids<-bitr(names(original_gene_list), fromType = "ACCNUM", toType = "ENTREZID", OrgDb=organism)
ids
# Iterate through databases
for (db in databases) {
print(db)
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = org.Hs.eg.db)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}
# Iterate through databases
for (db in databases) {
print(db)
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
# Check if annotation is found
if (nrow(annotation) != 0) {
print("here")
break  # Stop iterating if annotation is found
}
}
names(original_gene_list)
ids<-bitr(original_gene_list, fromType = "ACCNUM", toType = "ENTREZID", OrgDb=organism)
i=0
db = batabases[i]
i=0
db = databases[i]
db
i=1
db = databases[i]
db
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
annotation
original_gene_list <- c("A1BG", "A1BG-AS1", "A1CF","A2M","A2M-AS1")
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
annotation
original_gene_list <- c("100009676_at", "10000_at", "10001_at", "999_at", "9_at")
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=1
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=3
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=4
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=5
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=6
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=7
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=8
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=9
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
length(databases)
i=10
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=11
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=12
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=13
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=14
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=15
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=16
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=17
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=18
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=19
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=20
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=21
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=22
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=23
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=24
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=25
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=26
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=27
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
original_gene_list <- c("100009676", "10000", "10001", "999", "9")
i=26
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=25
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=24
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=23
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=22
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=21
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=20
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=19
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=18
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=17
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=16
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=15
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
annotation
db
i=14
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=13
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=12
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=11
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=10
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=9
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=8
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=7
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=6
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=5
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=4
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=3
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=1
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
databases = c("ACCNUM", "ALIAS", "ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME", "EVIDENCE", "EVIDENCEALL", "GENENAME", "GENETYPE", "GO", "GOALL", "IPI", "MAP", "OMIM", "ONTOLOGY", "ONTOLOGYALL", "PATH", "PFAM", "PMID", "PROSITE", "REFSEQ", "SYMBOL", "UCSCKG", "UNIPROT")
original_gene_list <- c("DNAJC11","CDK11A","NADK","MASP2","CLCN6","ARHGAP8","ARFGAP3", "NOL12")
i=1
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
annotation
original_gene_list <- c("A1BG","A1BG-AS1","A1CF","A2LD1","ZYG11B","ZYX","ZZEF1","tAKR")
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
annotation
db
BiocManager::install("hthgu133b.db")
BiocManager::install("hgu133plus2.db")
library(Biobase)
library(GEOquery)
BiocManager::install("GEOquery")
library(Biobase)
library(GEOquery)
library(annotate)
library(hgu95av2.db)
library(Biobase)
library(GEOquery)
library(annotate)
library(hthgu133b.db)
library(hgu133plus2.db)
select(hgu95av2.db, c("1007_s_at","1053_at"), c("SYMBOL","ENTREZID", "GENENAME"))
library(Biobase)
library(GEOquery)
library(annotate)
library(hthgu133b.db)
library(hgu133plus2.db)
select(hthgu133b.db, c("1007_s_at","1053_at"), c("SYMBOL","ENTREZID", "GENENAME"))
select(hgu133plus2.db, c("1007_s_at","1053_at"), c("SYMBOL","ENTREZID", "GENENAME"))
select(hgu133plus2.db, c("1007_s_at","1255_PM_g_at"), c("SYMBOL","ENTREZID", "GENENAME"))
select(hthgu133b.db, c("1007_s_at","1255_PM_g_at"), c("SYMBOL","ENTREZID", "GENENAME"))
BiocManager::install("pd.ht.hg.u133.plus.pm")
select(hgu133plus2.db, c("1007_s_at","1255_at"), c("SYMBOL","ENTREZID", "GENENAME"))
select(hgu133plus2.db, c("1007_s_at","1009_at"), c("SYMBOL","ENTREZID", "GENENAME"))
original_gene_list <- c("DDR1")
i=2
db = databases[i]
annotation <- bitr(original_gene_list, fromType = db, toType = "ENTREZID", OrgDb = organism)
annotation
library(pd.ht.hg.u133.plus.pm)
library(hgu133plus2.db)
select(pd.ht.hg.u133.plus.pm, c("1007_s_at","1009_at"), c("SYMBOL"))
BiocManager::install("AnnotationDbi")
library(pd.ht.hg.u133.plus.pm)
library(hgu133plus2.db)
select(pd.ht.hg.u133.plus.pm, c("1007_s_at","1009_at"), c("SYMBOL"))
data<-read.csv("data/GSE67472_normalized_data.csv", row.names = 1)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data<-read.csv("data/GSE67472_normalized_data.csv", row.names = 1)
data
gene_ids = rownames(data)
aliasgenids = select(hgu133plus2.db, c("1007_s_at","1009_at"), c("SYMBOL"))
aliasgenids
aliasgenids = select(hgu133plus2.db, gene_ids, c("SYMBOL"))
aliasgenids = select(hgu133plus2.db, gene_ids, c("SYMBOL"))
aliasgenids
aliasgenids = select(hgu133plus2.db, c("1007_s_at","1009_at"), c("SYMBOL"))
aliasgenids
select(hgu95av2.db, c("1007_s_at","1053_at"), c("SYMBOL","ENTREZID", "GENENAME"))
select(hgu133plus2.db, c("1007_s_at","1053_at"), c("SYMBOL","ENTREZID", "GENENAME"))
select(hgu133plus2.db, c("1007_s_at","1053_at", "100505905_at"), c("SYMBOL","ENTREZID", "GENENAME"))
library(Biobase)
library(GEOquery)
library(annotate)
library(hgu133plus2.db)
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load data
data<-read.csv("data/GSE67472_normalized_data.csv", row.names = 1)
gene_ids = rownames(data)
aliasgenids = select(hgu133plus2.db, c("1007_s_at","1009_at"), c("SYMBOL"))
aliasgenids
aliasgenids = select(hgu133plus2.db, gene_ids, c("SYMBOL"))
aliasgenids
na.omit(aliasgenids)
dim(na.omit(aliasgenids))
install.packages("jsonlite")
install.packages("jsonlite")
na.omit(aliasgenids)
data <- na.omit(aliasgenids)
# Convert the table to a named list
data_list <- as.list(setNames(data$SYMBOL, data$PROBEID))
# Convert the list to JSON format
library(jsonlite)
json_data <- toJSON(data_list, auto_unbox = TRUE)
# Save the JSON data to a file
write(json_data, file = "data.json")
data<-read.csv("data/GSE67472_normalized_data.csv", row.names = 1)
gene_ids = rownames(data)
aliasgenids = select(hgu133plus2.db, gene_ids, c("SYMBOL"))
aliasgenids <- na.omit(aliasgenids)
# Convert the table to a named list
data_list <- as.list(setNames(aliasgenids$SYMBOL, aliasgenids$PROBEID))
# Convert the list to JSON format
library(jsonlite)
json_data <- toJSON(data_list, auto_unbox = TRUE)
# Save the JSON data to a file
write(json_data, file = "data.json")
aliasgenids = select(hgu133plus2.db, gene_ids, c("ENTREZID"))
aliasgenids <- na.omit(aliasgenids)
dim(aliasgenids)
BiocManager::install("pd.hg.u133.plus.2")
library(pd.hg.u133.plus.2)
aliasgenids = select(pd.hg.u133.plus.2, gene_ids, c("SYMBOL"))
aliasgenids = select(hgu133plus2.db, gene_ids, c("SYMBOL"))
aliasgenids <- na.omit(aliasgenids)
library(Biobase)
library(GEOquery)
library(annotate)
library(hgu133plus2.db)
library(pd.hg.u133.plus.2)
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load data
data<-read.csv("data/GSE67472_normalized_data.csv", row.names = 1)
gene_ids = rownames(data)
aliasgenids = select(hgu133plus2.db, gene_ids, c("SYMBOL"))
aliasgenids <- na.omit(aliasgenids)
# Convert the table to a named list
data_list <- as.list(setNames(aliasgenids$SYMBOL, aliasgenids$PROBEID))
# Convert the list to JSON format
library(jsonlite)
json_data <- toJSON(data_list, auto_unbox = TRUE)
# Save the JSON data to a file
write(json_data, file = "GSE67472_annotation.json")
data <- read.table("downloads/GPL13158-5065.txt", header = TRUE, sep = "\t", skip = 16)
data <- read.table("downloads/GPL13158-5065.txt", header = TRUE, sep = "\t")
help(read.table)
data <- read.table("downloads/GPL13158-5065.txt", header = TRUE, sep = "\t", skip=32)
data <- read.table("downloads/GPL13158-5065.txt", header = TRUE, sep = "\t", skip=16)
data <- read.table("downloads/GPL13158-5065.txt", header = TRUE, sep = "\t", skip=16, blank.lines.skip=T)
data <- read.table("downloads/GPL13158-5065.txt", header = TRUE, sep = "\t", blank.lines.skip=T)
help(select)
require(hgu95av2.db)
BiocManager::install(hgu95av2.db)
